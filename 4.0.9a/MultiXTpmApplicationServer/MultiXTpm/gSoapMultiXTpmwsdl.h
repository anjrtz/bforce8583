/* gSoapMultiXTpmwsdl.h
   Generated by wsdl2h 1.2.10 from c:\Dev\mFino\trunk\mFinoMultiXTpmServer\MultiXTpm.wsdl and gSoapTypeMap.dat
   2009-06-30 06:42:18 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://mitug.co.il/MultiXTpm                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

MultiXTpm = "http://mitug.co.il/MultiXTpm"

*/

//gsoap MultiXTpm schema namespace:	http://mitug.co.il/MultiXTpm
//gsoap MultiXTpm schema elementForm:	qualified
//gsoap MultiXTpm schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class MultiXTpm__ConfigData.
class MultiXTpm__ConfigData;

//  Forward declaration of class MultiXTpm__ArrayOfUserPermission.
class MultiXTpm__ArrayOfUserPermission;

//  Forward declaration of class MultiXTpm__UserPermission.
class MultiXTpm__UserPermission;

//  Forward declaration of class MultiXTpm__ArrayOfProcessClass.
class MultiXTpm__ArrayOfProcessClass;

//  Forward declaration of class MultiXTpm__ProcessClass.
class MultiXTpm__ProcessClass;

//  Forward declaration of class MultiXTpm__ArrayOfParam.
class MultiXTpm__ArrayOfParam;

//  Forward declaration of class MultiXTpm__Param.
class MultiXTpm__Param;

//  Forward declaration of class MultiXTpm__ArrayOfInt.
class MultiXTpm__ArrayOfInt;

//  Forward declaration of class MultiXTpm__ArrayOfLink.
class MultiXTpm__ArrayOfLink;

//  Forward declaration of class MultiXTpm__Link.
class MultiXTpm__Link;

//  Forward declaration of class MultiXTpm__SSLParams.
class MultiXTpm__SSLParams;

//  Forward declaration of class MultiXTpm__ArrayOfGroup.
class MultiXTpm__ArrayOfGroup;

//  Forward declaration of class MultiXTpm__Group.
class MultiXTpm__Group;

//  Forward declaration of class MultiXTpm__ArrayOfMessage.
class MultiXTpm__ArrayOfMessage;

//  Forward declaration of class MultiXTpm__Message.
class MultiXTpm__Message;

//  Forward declaration of class MultiXTpm__ArrayOfGroupForwardFlags.
class MultiXTpm__ArrayOfGroupForwardFlags;

//  Forward declaration of class MultiXTpm__GroupForwardFlags.
class MultiXTpm__GroupForwardFlags;

//  Forward declaration of class MultiXTpm__SystemStatus.
class MultiXTpm__SystemStatus;

//  Forward declaration of class MultiXTpm__ArrayOfGroupStatus.
class MultiXTpm__ArrayOfGroupStatus;

//  Forward declaration of class MultiXTpm__GroupStatus.
class MultiXTpm__GroupStatus;

//  Forward declaration of class MultiXTpm__ArrayOfProcessStatus.
class MultiXTpm__ArrayOfProcessStatus;

//  Forward declaration of class MultiXTpm__ProcessStatus.
class MultiXTpm__ProcessStatus;

//  Forward declaration of class MultiXTpm__ArrayOfInt1.
class MultiXTpm__ArrayOfInt1;

//  Forward declaration of class _MultiXTpm__GetConfig.
class _MultiXTpm__GetConfig;

//  Forward declaration of class _MultiXTpm__GetConfigResponse.
class _MultiXTpm__GetConfigResponse;

//  Forward declaration of class _MultiXTpm__UpdateConfig.
class _MultiXTpm__UpdateConfig;

//  Forward declaration of class _MultiXTpm__UpdateConfigResponse.
class _MultiXTpm__UpdateConfigResponse;

//  Forward declaration of class _MultiXTpm__GetSystemStatus.
class _MultiXTpm__GetSystemStatus;

//  Forward declaration of class _MultiXTpm__GetSystemStatusResponse.
class _MultiXTpm__GetSystemStatusResponse;

//  Forward declaration of class _MultiXTpm__RestartProcess.
class _MultiXTpm__RestartProcess;

//  Forward declaration of class _MultiXTpm__RestartProcessResponse.
class _MultiXTpm__RestartProcessResponse;

//  Forward declaration of class _MultiXTpm__RestartGroup.
class _MultiXTpm__RestartGroup;

//  Forward declaration of class _MultiXTpm__RestartGroupResponse.
class _MultiXTpm__RestartGroupResponse;

//  Forward declaration of class _MultiXTpm__StartProcess.
class _MultiXTpm__StartProcess;

//  Forward declaration of class _MultiXTpm__StartProcessResponse.
class _MultiXTpm__StartProcessResponse;

//  Forward declaration of class _MultiXTpm__StartGroup.
class _MultiXTpm__StartGroup;

//  Forward declaration of class _MultiXTpm__StartGroupResponse.
class _MultiXTpm__StartGroupResponse;

//  Forward declaration of class _MultiXTpm__ShutdownProcess.
class _MultiXTpm__ShutdownProcess;

//  Forward declaration of class _MultiXTpm__ShutdownProcessResponse.
class _MultiXTpm__ShutdownProcessResponse;

//  Forward declaration of class _MultiXTpm__ShutdownGroup.
class _MultiXTpm__ShutdownGroup;

//  Forward declaration of class _MultiXTpm__ShutdownGroupResponse.
class _MultiXTpm__ShutdownGroupResponse;

//  Forward declaration of class _MultiXTpm__SuspendGroup.
class _MultiXTpm__SuspendGroup;

//  Forward declaration of class _MultiXTpm__SuspendGroupResponse.
class _MultiXTpm__SuspendGroupResponse;

//  Forward declaration of class _MultiXTpm__SuspendProcess.
class _MultiXTpm__SuspendProcess;

//  Forward declaration of class _MultiXTpm__SuspendProcessResponse.
class _MultiXTpm__SuspendProcessResponse;

//  Forward declaration of class _MultiXTpm__ResumeGroup.
class _MultiXTpm__ResumeGroup;

//  Forward declaration of class _MultiXTpm__ResumeGroupResponse.
class _MultiXTpm__ResumeGroupResponse;

//  Forward declaration of class _MultiXTpm__ResumeProcess.
class _MultiXTpm__ResumeProcess;

//  Forward declaration of class _MultiXTpm__ResumeProcessResponse.
class _MultiXTpm__ResumeProcessResponse;

//  Forward declaration of class _MultiXTpm__RestartAll.
class _MultiXTpm__RestartAll;

//  Forward declaration of class _MultiXTpm__RestartAllResponse.
class _MultiXTpm__RestartAllResponse;

//  Forward declaration of class _MultiXTpm__StartAll.
class _MultiXTpm__StartAll;

//  Forward declaration of class _MultiXTpm__StartAllResponse.
class _MultiXTpm__StartAllResponse;

//  Forward declaration of class _MultiXTpm__ShutdownAll.
class _MultiXTpm__ShutdownAll;

//  Forward declaration of class _MultiXTpm__ShutdownAllResponse.
class _MultiXTpm__ShutdownAllResponse;

//  Forward declaration of class _MultiXTpm__SuspendAll.
class _MultiXTpm__SuspendAll;

//  Forward declaration of class _MultiXTpm__SuspendAllResponse.
class _MultiXTpm__SuspendAllResponse;

//  Forward declaration of class _MultiXTpm__ResumeAll.
class _MultiXTpm__ResumeAll;

//  Forward declaration of class _MultiXTpm__ResumeAllResponse.
class _MultiXTpm__ResumeAllResponse;

/// "http://mitug.co.il/MultiXTpm":MultiXLinkType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'MultiXTpm__MultiXLinkType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum MultiXTpm__MultiXLinkType
{
	MultiXTpm__MultiXLinkType__MultiXLinkTypeFirst,	///< xs:string value="MultiXLinkTypeFirst"
	MultiXTpm__MultiXLinkType__MultiXLinkTypeTcp,	///< xs:string value="MultiXLinkTypeTcp"
	MultiXTpm__MultiXLinkType__MultiXLinkTypeLast,	///< xs:string value="MultiXLinkTypeLast"
};

/// "http://mitug.co.il/MultiXTpm":MultiXOpenMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'MultiXTpm__MultiXOpenMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum MultiXTpm__MultiXOpenMode
{
	MultiXTpm__MultiXOpenMode__MultiXOpenModeFirst,	///< xs:string value="MultiXOpenModeFirst"
	MultiXTpm__MultiXOpenMode__MultiXOpenModeServer,	///< xs:string value="MultiXOpenModeServer"
	MultiXTpm__MultiXOpenMode__MultiXOpenModeClient,	///< xs:string value="MultiXOpenModeClient"
	MultiXTpm__MultiXOpenMode__MultiXOpenModeAccept,	///< xs:string value="MultiXOpenModeAccept"
	MultiXTpm__MultiXOpenMode__MultiXOpenModeLast,	///< xs:string value="MultiXOpenModeLast"
};

/// "http://mitug.co.il/MultiXTpm":SSL_API is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'MultiXTpm__SSL_USCOREAPI' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum MultiXTpm__SSL_USCOREAPI
{
	MultiXTpm__SSL_USCOREAPI__NoSSLAPI,	///< xs:string value="NoSSLAPI"
	MultiXTpm__SSL_USCOREAPI__OpenSSL,	///< xs:string value="OpenSSL"
};

/// "http://mitug.co.il/MultiXTpm":ProcessControlStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'MultiXTpm__ProcessControlStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum MultiXTpm__ProcessControlStatus
{
	MultiXTpm__ProcessControlStatus__Normal,	///< xs:string value="Normal"
	MultiXTpm__ProcessControlStatus__Shutdown,	///< xs:string value="Shutdown"
	MultiXTpm__ProcessControlStatus__Suspend,	///< xs:string value="Suspend"
	MultiXTpm__ProcessControlStatus__Restart,	///< xs:string value="Restart"
};

/// "http://mitug.co.il/MultiXTpm":ConfigData is a complexType.
class MultiXTpm__ConfigData
{ public:
/// Element LastUpdate of type xs:dateTime.
    time_t                               LastUpdate                     1;	///< Required element.
/// Element UsersPermissionsFile of type xs:string.
    std::string*                         UsersPermissionsFile           0;	///< Optional element.
/// Element ProcessClasses of type "http://mitug.co.il/MultiXTpm":ArrayOfProcessClass.
    MultiXTpm__ArrayOfProcessClass*      ProcessClasses                 0;	///< Optional element.
/// Element Links of type "http://mitug.co.il/MultiXTpm":ArrayOfLink.
    MultiXTpm__ArrayOfLink*              Links                          0;	///< Optional element.
/// Element Groups of type "http://mitug.co.il/MultiXTpm":ArrayOfGroup.
    MultiXTpm__ArrayOfGroup*             Groups                         0;	///< Optional element.
/// Element Messages of type "http://mitug.co.il/MultiXTpm":ArrayOfMessage.
    MultiXTpm__ArrayOfMessage*           Messages                       0;	///< Optional element.
/// Element UsersPermissions of type "http://mitug.co.il/MultiXTpm":ArrayOfUserPermission.
    MultiXTpm__ArrayOfUserPermission*    UsersPermissions               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfUserPermission is a complexType.
class MultiXTpm__ArrayOfUserPermission
{ public:
/// Vector of MultiXTpm__UserPermission* with length 0..unbounded
    std::vector<MultiXTpm__UserPermission*> UserPermission                 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":UserPermission is a complexType.
class MultiXTpm__UserPermission
{ public:
/// Element UserName of type xs:string.
    std::string*                         UserName                       0;	///< Optional element.
/// Element IsGroup of type xs:boolean.
    bool                                 IsGroup                        1;	///< Required element.
/// Element GetWSDL of type xs:boolean.
    bool                                 GetWSDL                        1;	///< Required element.
/// Element GetConfig of type xs:boolean.
    bool                                 GetConfig                      1;	///< Required element.
/// Element UpdateConfig of type xs:boolean.
    bool                                 UpdateConfig                   1;	///< Required element.
/// Element GetSystemStatus of type xs:boolean.
    bool                                 GetSystemStatus                1;	///< Required element.
/// Element RestartProcess of type xs:boolean.
    bool                                 RestartProcess                 1;	///< Required element.
/// Element RestartGroup of type xs:boolean.
    bool                                 RestartGroup                   1;	///< Required element.
/// Element StartProcess of type xs:boolean.
    bool                                 StartProcess                   1;	///< Required element.
/// Element StartGroup of type xs:boolean.
    bool                                 StartGroup                     1;	///< Required element.
/// Element ShutdownProcess of type xs:boolean.
    bool                                 ShutdownProcess                1;	///< Required element.
/// Element ShutdownGroup of type xs:boolean.
    bool                                 ShutdownGroup                  1;	///< Required element.
/// Element SuspendGroup of type xs:boolean.
    bool                                 SuspendGroup                   1;	///< Required element.
/// Element SuspendProcess of type xs:boolean.
    bool                                 SuspendProcess                 1;	///< Required element.
/// Element ResumeGroup of type xs:boolean.
    bool                                 ResumeGroup                    1;	///< Required element.
/// Element ResumeProcess of type xs:boolean.
    bool                                 ResumeProcess                  1;	///< Required element.
/// Element RestartAll of type xs:boolean.
    bool                                 RestartAll                     1;	///< Required element.
/// Element StartAll of type xs:boolean.
    bool                                 StartAll                       1;	///< Required element.
/// Element ShutdownAll of type xs:boolean.
    bool                                 ShutdownAll                    1;	///< Required element.
/// Element SuspendAll of type xs:boolean.
    bool                                 SuspendAll                     1;	///< Required element.
/// Element ResumeAll of type xs:boolean.
    bool                                 ResumeAll                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfProcessClass is a complexType.
class MultiXTpm__ArrayOfProcessClass
{ public:
/// Vector of MultiXTpm__ProcessClass* with length 0..unbounded
    std::vector<MultiXTpm__ProcessClass*> ProcessClass                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ProcessClass is a complexType.
class MultiXTpm__ProcessClass
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Description of type xs:string.
    std::string*                         Description                    0;	///< Optional element.
/// Element PasswordToSend of type xs:string.
    std::string*                         PasswordToSend                 0;	///< Optional element.
/// Element ExpectedPassword of type xs:string.
    std::string*                         ExpectedPassword               0;	///< Optional element.
/// Element ExecCmd of type xs:string.
    std::string*                         ExecCmd                        0;	///< Optional element.
/// Element ClassName of type xs:string.
    std::string*                         ClassName                      0;	///< Optional element.
/// Element AdditionalConfigTextFile of type xs:string.
    std::string*                         AdditionalConfigTextFile       0;	///< Optional element.
/// Element DebugLevel of type xs:int.
    int                                  DebugLevel                     1;	///< Required element.
/// Element DefaultSendTimeout of type xs:int.
    int                                  DefaultSendTimeout             1;	///< Required element.
/// Element ExecParams of type xs:string.
    std::string*                         ExecParams                     0;	///< Optional element.
/// Element MaxQueueSize of type xs:int.
    int                                  MaxQueueSize                   1;	///< Required element.
/// Element MaxSessions of type xs:int.
    int                                  MaxSessions                    1;	///< Required element.
/// Element MaxRecoveryQueueSize of type xs:int.
    int                                  MaxRecoveryQueueSize           1;	///< Required element.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// Element MinInstances of type xs:int.
    int                                  MinInstances                   1;	///< Required element.
/// Element MaxInstances of type xs:int.
    int                                  MaxInstances                   1;	///< Required element.
/// Element StartProcessDelay of type xs:int.
    int                                  StartProcessDelay              1;	///< Required element.
/// Element InactivityTimer of type xs:int.
    int                                  InactivityTimer                1;	///< Required element.
/// Element Params of type "http://mitug.co.il/MultiXTpm":ArrayOfParam.
    MultiXTpm__ArrayOfParam*             Params                         0;	///< Optional element.
/// Element LinkIDs of type "http://mitug.co.il/MultiXTpm":ArrayOfInt.
    MultiXTpm__ArrayOfInt*               LinkIDs                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfParam is a complexType.
class MultiXTpm__ArrayOfParam
{ public:
/// Vector of MultiXTpm__Param* with length 0..unbounded
    std::vector<MultiXTpm__Param*      > Param                          0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":Param is a complexType.
class MultiXTpm__Param
{ public:
/// Element ParamName of type xs:string.
    std::string*                         ParamName                      0;	///< Optional element.
/// Element ParamValue of type xs:string.
    std::string*                         ParamValue                     0;	///< Optional element.
    class _MultiXTpm__Param_XmlParamValue
    {
/// TODO: <any namespace="##any" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    std::vector<_XML>                    __any                         ;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       ;	///< Catch mixed content in XML string
    }                                   *XmlParamValue                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfInt is a complexType.
class MultiXTpm__ArrayOfInt
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > ID                             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfLink is a complexType.
class MultiXTpm__ArrayOfLink
{ public:
/// Vector of MultiXTpm__Link* with length 0..unbounded
    std::vector<MultiXTpm__Link*       > Link                           0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":Link is a complexType.
class MultiXTpm__Link
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Description of type xs:string.
    std::string*                         Description                    0;	///< Optional element.
/// Element LinkType of type "http://mitug.co.il/MultiXTpm":MultiXLinkType.
    enum MultiXTpm__MultiXLinkType       LinkType                       1;	///< Required element.
/// Element OpenMode of type "http://mitug.co.il/MultiXTpm":MultiXOpenMode.
    enum MultiXTpm__MultiXOpenMode       OpenMode                       1;	///< Required element.
/// Element Raw of type xs:boolean.
    bool                                 Raw                            1;	///< Required element.
/// Element LocalAddress of type xs:string.
    std::string*                         LocalAddress                   0;	///< Optional element.
/// Element LocalPort of type xs:string.
    std::string*                         LocalPort                      0;	///< Optional element.
/// Element RemoteAddress of type xs:string.
    std::string*                         RemoteAddress                  0;	///< Optional element.
/// Element RemotePort of type xs:string.
    std::string*                         RemotePort                     0;	///< Optional element.
/// Element SSLParams of type "http://mitug.co.il/MultiXTpm":SSLParams.
    MultiXTpm__SSLParams*                SSLParams                      0;	///< Optional element.
/// Element Params of type "http://mitug.co.il/MultiXTpm":ArrayOfParam.
    MultiXTpm__ArrayOfParam*             Params                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":SSLParams is a complexType.
class MultiXTpm__SSLParams
{ public:
/// Element API of type "http://mitug.co.il/MultiXTpm":SSL_API.
    enum MultiXTpm__SSL_USCOREAPI        API                            1;	///< Required element.
/// Element ClientAuthenticationRequired of type xs:boolean.
    bool                                 ClientAuthenticationRequired   1;	///< Required element.
/// Element ServerAuthenticationRequired of type xs:boolean.
    bool                                 ServerAuthenticationRequired   1;	///< Required element.
/// Element ServerNameVerificationRequired of type xs:boolean.
    bool                                 ServerNameVerificationRequired 1;	///< Required element.
/// Element TrustStoreFile of type xs:string.
    std::string*                         TrustStoreFile                 0;	///< Optional element.
/// Element TrustStoreDirectory of type xs:string.
    std::string*                         TrustStoreDirectory            0;	///< Optional element.
/// Element CertificateFile of type xs:string.
    std::string*                         CertificateFile                0;	///< Optional element.
/// Element PrivateKeyFile of type xs:string.
    std::string*                         PrivateKeyFile                 0;	///< Optional element.
/// Element PrivateKeyPassword of type xs:string.
    std::string*                         PrivateKeyPassword             0;	///< Optional element.
/// Element PrivateKeyPasswordFile of type xs:string.
    std::string*                         PrivateKeyPasswordFile         0;	///< Optional element.
/// Element RSAPrivateKeyFile of type xs:string.
    std::string*                         RSAPrivateKeyFile              0;	///< Optional element.
/// Element DHFile of type xs:string.
    std::string*                         DHFile                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfGroup is a complexType.
class MultiXTpm__ArrayOfGroup
{ public:
/// Vector of MultiXTpm__Group* with length 0..unbounded
    std::vector<MultiXTpm__Group*      > Group                          0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":Group is a complexType.
class MultiXTpm__Group
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Description of type xs:string.
    std::string*                         Description                    0;	///< Optional element.
/// Element ProcessClassIDs of type "http://mitug.co.il/MultiXTpm":ArrayOfInt.
    MultiXTpm__ArrayOfInt*               ProcessClassIDs                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfMessage is a complexType.
class MultiXTpm__ArrayOfMessage
{ public:
/// Vector of MultiXTpm__Message* with length 0..unbounded
    std::vector<MultiXTpm__Message*    > Message                        0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":Message is a complexType.
class MultiXTpm__Message
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Description of type xs:string.
    std::string*                         Description                    0;	///< Optional element.
/// Element Stateful of type xs:boolean.
    bool                                 Stateful                       1;	///< Required element.
/// Element DbProtected of type xs:boolean.
    bool                                 DbProtected                    1;	///< Required element.
/// Element Timeout of type xs:int.
    int                                  Timeout                        1;	///< Required element.
/// Element Priority of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// Element WSURL of type xs:string.
    std::string*                         WSURL                          0;	///< Optional element.
/// Element WSSoapAction of type xs:string.
    std::string*                         WSSoapAction                   0;	///< Optional element.
/// Element WSDllFile of type xs:string.
    std::string*                         WSDllFile                      0;	///< Optional element.
/// Element WSDllFunction of type xs:string.
    std::string*                         WSDllFunction                  0;	///< Optional element.
/// Element ForwardFlags of type "http://mitug.co.il/MultiXTpm":ArrayOfGroupForwardFlags.
    MultiXTpm__ArrayOfGroupForwardFlags*  ForwardFlags                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfGroupForwardFlags is a complexType.
class MultiXTpm__ArrayOfGroupForwardFlags
{ public:
/// Vector of MultiXTpm__GroupForwardFlags* with length 0..unbounded
    std::vector<MultiXTpm__GroupForwardFlags*> Flags                          0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":GroupForwardFlags is a complexType.
class MultiXTpm__GroupForwardFlags
{ public:
/// Element GroupID of type xs:int.
    int                                  GroupID                        1;	///< Required element.
/// Element ResponseRequired of type xs:boolean.
    bool                                 ResponseRequired               1;	///< Required element.
/// Element IgnoreResponse of type xs:boolean.
    bool                                 IgnoreResponse                 1;	///< Required element.
/// Element ForwardToAll of type xs:boolean.
    bool                                 ForwardToAll                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":SystemStatus is a complexType.
class MultiXTpm__SystemStatus
{ public:
/// Element TpmMultiXVersion of type xs:string.
    std::string*                         TpmMultiXVersion               0;	///< Optional element.
/// Element TpmVersion of type xs:string.
    std::string*                         TpmVersion                     0;	///< Optional element.
/// Element TpmHostName of type xs:string.
    std::string*                         TpmHostName                    0;	///< Optional element.
/// Element TpmHostIP of type xs:string.
    std::string*                         TpmHostIP                      0;	///< Optional element.
/// Element SessionsCount of type xs:int.
    int                                  SessionsCount                  1;	///< Required element.
/// Element GroupsStatus of type "http://mitug.co.il/MultiXTpm":ArrayOfGroupStatus.
    MultiXTpm__ArrayOfGroupStatus*       GroupsStatus                   0;	///< Optional element.
/// Element ProcessesStatus of type "http://mitug.co.il/MultiXTpm":ArrayOfProcessStatus.
    MultiXTpm__ArrayOfProcessStatus*     ProcessesStatus                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfGroupStatus is a complexType.
class MultiXTpm__ArrayOfGroupStatus
{ public:
/// Vector of MultiXTpm__GroupStatus* with length 0..unbounded
    std::vector<MultiXTpm__GroupStatus*> GroupStatus                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":GroupStatus is a complexType.
class MultiXTpm__GroupStatus
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element SessionsCount of type xs:int.
    int                                  SessionsCount                  1;	///< Required element.
/// Element OutQueueSize of type xs:int.
    int                                  OutQueueSize                   1;	///< Required element.
/// Element QueuedItemsSize of type xs:int.
    int                                  QueuedItemsSize                1;	///< Required element.
/// Element MaxProcessQueueEntries of type xs:int.
    int                                  MaxProcessQueueEntries         1;	///< Required element.
/// Element ProcessIDs of type "http://mitug.co.il/MultiXTpm":ArrayOfInt.
    MultiXTpm__ArrayOfInt*               ProcessIDs                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfProcessStatus is a complexType.
class MultiXTpm__ArrayOfProcessStatus
{ public:
/// Vector of MultiXTpm__ProcessStatus* with length 0..unbounded
    std::vector<MultiXTpm__ProcessStatus*> ProcessStatus                  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ProcessStatus is a complexType.
class MultiXTpm__ProcessStatus
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element MultiXVersion of type xs:string.
    std::string*                         MultiXVersion                  0;	///< Optional element.
/// Element AppVersion of type xs:string.
    std::string*                         AppVersion                     0;	///< Optional element.
/// Element ProcessClassID of type xs:int.
    int                                  ProcessClassID                 1;	///< Required element.
/// Element IsReady of type xs:boolean.
    bool                                 IsReady                        1;	///< Required element.
/// Element ControlStatus of type "http://mitug.co.il/MultiXTpm":ProcessControlStatus.
    enum MultiXTpm__ProcessControlStatus  ControlStatus                  1;	///< Required element.
/// Element SessionsCount of type xs:int.
    int                                  SessionsCount                  1;	///< Required element.
/// Element OutQueueSize of type xs:int.
    int                                  OutQueueSize                   1;	///< Required element.
/// Element LastMsgTime of type xs:dateTime.
    time_t                               LastMsgTime                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://mitug.co.il/MultiXTpm":ArrayOfInt1 is a complexType.
class MultiXTpm__ArrayOfInt1
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > int_                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":GetConfig of complexType.

/// "http://mitug.co.il/MultiXTpm":GetConfig is a complexType.
class _MultiXTpm__GetConfig
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":GetConfigResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":GetConfigResponse is a complexType.
class _MultiXTpm__GetConfigResponse
{ public:
/// Element GetConfigResult of type "http://mitug.co.il/MultiXTpm":ConfigData.
    MultiXTpm__ConfigData*               GetConfigResult                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":UpdateConfig of complexType.

/// "http://mitug.co.il/MultiXTpm":UpdateConfig is a complexType.
class _MultiXTpm__UpdateConfig
{ public:
/// Element Config of type "http://mitug.co.il/MultiXTpm":ConfigData.
    MultiXTpm__ConfigData*               Config                         0;	///< Optional element.
/// Element SaveToDisk of type xs:boolean.
    bool                                 SaveToDisk                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":UpdateConfigResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":UpdateConfigResponse is a complexType.
class _MultiXTpm__UpdateConfigResponse
{ public:
/// Element UpdateConfigResult of type xs:boolean.
    bool                                 UpdateConfigResult             1;	///< Required element.
/// Element Config of type "http://mitug.co.il/MultiXTpm":ConfigData.
    MultiXTpm__ConfigData*               Config                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":GetSystemStatus of complexType.

/// "http://mitug.co.il/MultiXTpm":GetSystemStatus is a complexType.
class _MultiXTpm__GetSystemStatus
{ public:
/// Element LastConfigTime of type xs:dateTime.
    time_t                               LastConfigTime                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":GetSystemStatusResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":GetSystemStatusResponse is a complexType.
class _MultiXTpm__GetSystemStatusResponse
{ public:
/// Element GetSystemStatusResult of type "http://mitug.co.il/MultiXTpm":SystemStatus.
    MultiXTpm__SystemStatus*             GetSystemStatusResult          0;	///< Optional element.
/// Element Config of type "http://mitug.co.il/MultiXTpm":ConfigData.
    MultiXTpm__ConfigData*               Config                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartProcess of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartProcess is a complexType.
class _MultiXTpm__RestartProcess
{ public:
/// Element ProcessID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              ProcessID                      0;	///< Optional element.
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartProcessResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartProcessResponse is a complexType.
class _MultiXTpm__RestartProcessResponse
{ public:
/// Element RestartProcessResult of type xs:boolean.
    bool                                 RestartProcessResult           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartGroup of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartGroup is a complexType.
class _MultiXTpm__RestartGroup
{ public:
/// Element GroupID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              GroupID                        0;	///< Optional element.
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartGroupResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartGroupResponse is a complexType.
class _MultiXTpm__RestartGroupResponse
{ public:
/// Element RestartGroupResult of type xs:boolean.
    bool                                 RestartGroupResult             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartProcess of complexType.

/// "http://mitug.co.il/MultiXTpm":StartProcess is a complexType.
class _MultiXTpm__StartProcess
{ public:
/// Element ProcessID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              ProcessID                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartProcessResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":StartProcessResponse is a complexType.
class _MultiXTpm__StartProcessResponse
{ public:
/// Element StartProcessResult of type xs:boolean.
    bool                                 StartProcessResult             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartGroup of complexType.

/// "http://mitug.co.il/MultiXTpm":StartGroup is a complexType.
class _MultiXTpm__StartGroup
{ public:
/// Element GroupID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              GroupID                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartGroupResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":StartGroupResponse is a complexType.
class _MultiXTpm__StartGroupResponse
{ public:
/// Element StartGroupResult of type xs:boolean.
    bool                                 StartGroupResult               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownProcess of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownProcess is a complexType.
class _MultiXTpm__ShutdownProcess
{ public:
/// Element ProcessID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              ProcessID                      0;	///< Optional element.
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownProcessResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownProcessResponse is a complexType.
class _MultiXTpm__ShutdownProcessResponse
{ public:
/// Element ShutdownProcessResult of type xs:boolean.
    bool                                 ShutdownProcessResult          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownGroup of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownGroup is a complexType.
class _MultiXTpm__ShutdownGroup
{ public:
/// Element GroupID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              GroupID                        0;	///< Optional element.
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownGroupResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownGroupResponse is a complexType.
class _MultiXTpm__ShutdownGroupResponse
{ public:
/// Element ShutdownGroupResult of type xs:boolean.
    bool                                 ShutdownGroupResult            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendGroup of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendGroup is a complexType.
class _MultiXTpm__SuspendGroup
{ public:
/// Element GroupID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              GroupID                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendGroupResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendGroupResponse is a complexType.
class _MultiXTpm__SuspendGroupResponse
{ public:
/// Element SuspendGroupResult of type xs:boolean.
    bool                                 SuspendGroupResult             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendProcess of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendProcess is a complexType.
class _MultiXTpm__SuspendProcess
{ public:
/// Element ProcessID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              ProcessID                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendProcessResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendProcessResponse is a complexType.
class _MultiXTpm__SuspendProcessResponse
{ public:
/// Element SuspendProcessResult of type xs:boolean.
    bool                                 SuspendProcessResult           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeGroup of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeGroup is a complexType.
class _MultiXTpm__ResumeGroup
{ public:
/// Element GroupID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              GroupID                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeGroupResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeGroupResponse is a complexType.
class _MultiXTpm__ResumeGroupResponse
{ public:
/// Element ResumeGroupResult of type xs:boolean.
    bool                                 ResumeGroupResult              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeProcess of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeProcess is a complexType.
class _MultiXTpm__ResumeProcess
{ public:
/// Element ProcessID of type "http://mitug.co.il/MultiXTpm":ArrayOfInt1.
    MultiXTpm__ArrayOfInt1*              ProcessID                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeProcessResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeProcessResponse is a complexType.
class _MultiXTpm__ResumeProcessResponse
{ public:
/// Element ResumeProcessResult of type xs:boolean.
    bool                                 ResumeProcessResult            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartAll of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartAll is a complexType.
class _MultiXTpm__RestartAll
{ public:
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":RestartAllResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":RestartAllResponse is a complexType.
class _MultiXTpm__RestartAllResponse
{ public:
/// Element RestartAllResult of type xs:boolean.
    bool                                 RestartAllResult               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartAll of complexType.

/// "http://mitug.co.il/MultiXTpm":StartAll is a complexType.
class _MultiXTpm__StartAll
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":StartAllResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":StartAllResponse is a complexType.
class _MultiXTpm__StartAllResponse
{ public:
/// Element StartAllResult of type xs:boolean.
    bool                                 StartAllResult                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownAll of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownAll is a complexType.
class _MultiXTpm__ShutdownAll
{ public:
/// Element bForce of type xs:boolean.
    bool                                 bForce                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ShutdownAllResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ShutdownAllResponse is a complexType.
class _MultiXTpm__ShutdownAllResponse
{ public:
/// Element ShutdownAllResult of type xs:boolean.
    bool                                 ShutdownAllResult              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendAll of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendAll is a complexType.
class _MultiXTpm__SuspendAll
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":SuspendAllResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":SuspendAllResponse is a complexType.
class _MultiXTpm__SuspendAllResponse
{ public:
/// Element SuspendAllResult of type xs:boolean.
    bool                                 SuspendAllResult               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeAll of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeAll is a complexType.
class _MultiXTpm__ResumeAll
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://mitug.co.il/MultiXTpm":ResumeAllResponse of complexType.

/// "http://mitug.co.il/MultiXTpm":ResumeAllResponse is a complexType.
class _MultiXTpm__ResumeAllResponse
{ public:
/// Element ResumeAllResult of type xs:boolean.
    bool                                 ResumeAllResult                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap MultiXTpm11 service name:	MultiXTpmSoap 
//gsoap MultiXTpm11 service type:	MultiXTpmSoap 
//gsoap MultiXTpm11 service port:	http://localhost/MultiXTpm 
//gsoap MultiXTpm11 service namespace:	http://mitug.co.il/MultiXTpm/MultiXTpmSoap 
//gsoap MultiXTpm11 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap MultiXTpm12 service name:	MultiXTpmSoap12 
//gsoap MultiXTpm12 service type:	MultiXTpmSoap 
//gsoap MultiXTpm12 service port:	http://localhost/MultiXTpm 
//gsoap MultiXTpm12 service namespace:	http://mitug.co.il/MultiXTpm/MultiXTpmSoap12 
//gsoap MultiXTpm12 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref MultiXTpmSoap
  - @ref MultiXTpmSoap12

*/

/**

@page MultiXTpmSoap Binding "MultiXTpmSoap"

@section MultiXTpmSoap_operations Operations of Binding  "MultiXTpmSoap"
  - @ref __MultiXTpm11__GetConfig
  - @ref __MultiXTpm11__UpdateConfig
  - @ref __MultiXTpm11__GetSystemStatus
  - @ref __MultiXTpm11__RestartProcess
  - @ref __MultiXTpm11__RestartGroup
  - @ref __MultiXTpm11__StartProcess
  - @ref __MultiXTpm11__StartGroup
  - @ref __MultiXTpm11__ShutdownProcess
  - @ref __MultiXTpm11__ShutdownGroup
  - @ref __MultiXTpm11__SuspendGroup
  - @ref __MultiXTpm11__SuspendProcess
  - @ref __MultiXTpm11__ResumeGroup
  - @ref __MultiXTpm11__ResumeProcess
  - @ref __MultiXTpm11__RestartAll
  - @ref __MultiXTpm11__StartAll
  - @ref __MultiXTpm11__ShutdownAll
  - @ref __MultiXTpm11__SuspendAll
  - @ref __MultiXTpm11__ResumeAll

@section MultiXTpmSoap_ports Endpoints of Binding  "MultiXTpmSoap"
  - http://localhost/MultiXTpm

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page MultiXTpmSoap12 Binding "MultiXTpmSoap12"

@section MultiXTpmSoap12_operations Operations of Binding  "MultiXTpmSoap12"
  - @ref __MultiXTpm12__GetConfig
  - @ref __MultiXTpm12__UpdateConfig
  - @ref __MultiXTpm12__GetSystemStatus
  - @ref __MultiXTpm12__RestartProcess
  - @ref __MultiXTpm12__RestartGroup
  - @ref __MultiXTpm12__StartProcess
  - @ref __MultiXTpm12__StartGroup
  - @ref __MultiXTpm12__ShutdownProcess
  - @ref __MultiXTpm12__ShutdownGroup
  - @ref __MultiXTpm12__SuspendGroup
  - @ref __MultiXTpm12__SuspendProcess
  - @ref __MultiXTpm12__ResumeGroup
  - @ref __MultiXTpm12__ResumeProcess
  - @ref __MultiXTpm12__RestartAll
  - @ref __MultiXTpm12__StartAll
  - @ref __MultiXTpm12__ShutdownAll
  - @ref __MultiXTpm12__SuspendAll
  - @ref __MultiXTpm12__ResumeAll

@section MultiXTpmSoap12_ports Endpoints of Binding  "MultiXTpmSoap12"
  - http://localhost/MultiXTpm

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * MultiXTpmSoap                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__GetConfig                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__GetConfig" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/GetConfig"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__GetConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,
    // response parameters:
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__GetConfig(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,
    // response parameters:
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	GetConfig document
//gsoap MultiXTpm11 service method-encoding:	GetConfig literal
//gsoap MultiXTpm11 service method-action:	GetConfig http://mitug.co.il/MultiXTpm/GetConfig
int __MultiXTpm11__GetConfig(
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,	///< Request parameter
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__UpdateConfig                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__UpdateConfig" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/UpdateConfig"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__UpdateConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,
    // response parameters:
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__UpdateConfig(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,
    // response parameters:
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	UpdateConfig document
//gsoap MultiXTpm11 service method-encoding:	UpdateConfig literal
//gsoap MultiXTpm11 service method-action:	UpdateConfig http://mitug.co.il/MultiXTpm/UpdateConfig
int __MultiXTpm11__UpdateConfig(
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,	///< Request parameter
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__GetSystemStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__GetSystemStatus" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/GetSystemStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__GetSystemStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,
    // response parameters:
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__GetSystemStatus(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,
    // response parameters:
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	GetSystemStatus document
//gsoap MultiXTpm11 service method-encoding:	GetSystemStatus literal
//gsoap MultiXTpm11 service method-action:	GetSystemStatus http://mitug.co.il/MultiXTpm/GetSystemStatus
int __MultiXTpm11__GetSystemStatus(
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,	///< Request parameter
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__RestartProcess                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__RestartProcess" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__RestartProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,
    // response parameters:
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__RestartProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,
    // response parameters:
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	RestartProcess document
//gsoap MultiXTpm11 service method-encoding:	RestartProcess literal
//gsoap MultiXTpm11 service method-action:	RestartProcess http://mitug.co.il/MultiXTpm/RestartProcess
int __MultiXTpm11__RestartProcess(
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,	///< Request parameter
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__RestartGroup                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__RestartGroup" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__RestartGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,
    // response parameters:
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__RestartGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,
    // response parameters:
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	RestartGroup document
//gsoap MultiXTpm11 service method-encoding:	RestartGroup literal
//gsoap MultiXTpm11 service method-action:	RestartGroup http://mitug.co.il/MultiXTpm/RestartGroup
int __MultiXTpm11__RestartGroup(
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,	///< Request parameter
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__StartProcess                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__StartProcess" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__StartProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,
    // response parameters:
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__StartProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,
    // response parameters:
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	StartProcess document
//gsoap MultiXTpm11 service method-encoding:	StartProcess literal
//gsoap MultiXTpm11 service method-action:	StartProcess http://mitug.co.il/MultiXTpm/StartProcess
int __MultiXTpm11__StartProcess(
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,	///< Request parameter
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__StartGroup                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__StartGroup" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__StartGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,
    // response parameters:
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__StartGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,
    // response parameters:
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	StartGroup document
//gsoap MultiXTpm11 service method-encoding:	StartGroup literal
//gsoap MultiXTpm11 service method-action:	StartGroup http://mitug.co.il/MultiXTpm/StartGroup
int __MultiXTpm11__StartGroup(
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,	///< Request parameter
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ShutdownProcess                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ShutdownProcess" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ShutdownProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,
    // response parameters:
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ShutdownProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,
    // response parameters:
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ShutdownProcess document
//gsoap MultiXTpm11 service method-encoding:	ShutdownProcess literal
//gsoap MultiXTpm11 service method-action:	ShutdownProcess http://mitug.co.il/MultiXTpm/ShutdownProcess
int __MultiXTpm11__ShutdownProcess(
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,	///< Request parameter
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ShutdownGroup                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ShutdownGroup" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ShutdownGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,
    // response parameters:
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ShutdownGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,
    // response parameters:
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ShutdownGroup document
//gsoap MultiXTpm11 service method-encoding:	ShutdownGroup literal
//gsoap MultiXTpm11 service method-action:	ShutdownGroup http://mitug.co.il/MultiXTpm/ShutdownGroup
int __MultiXTpm11__ShutdownGroup(
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,	///< Request parameter
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__SuspendGroup                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__SuspendGroup" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__SuspendGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,
    // response parameters:
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__SuspendGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,
    // response parameters:
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	SuspendGroup document
//gsoap MultiXTpm11 service method-encoding:	SuspendGroup literal
//gsoap MultiXTpm11 service method-action:	SuspendGroup http://mitug.co.il/MultiXTpm/SuspendGroup
int __MultiXTpm11__SuspendGroup(
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,	///< Request parameter
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__SuspendProcess                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__SuspendProcess" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__SuspendProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,
    // response parameters:
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__SuspendProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,
    // response parameters:
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	SuspendProcess document
//gsoap MultiXTpm11 service method-encoding:	SuspendProcess literal
//gsoap MultiXTpm11 service method-action:	SuspendProcess http://mitug.co.il/MultiXTpm/SuspendProcess
int __MultiXTpm11__SuspendProcess(
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,	///< Request parameter
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ResumeGroup                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ResumeGroup" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ResumeGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,
    // response parameters:
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ResumeGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,
    // response parameters:
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ResumeGroup document
//gsoap MultiXTpm11 service method-encoding:	ResumeGroup literal
//gsoap MultiXTpm11 service method-action:	ResumeGroup http://mitug.co.il/MultiXTpm/ResumeGroup
int __MultiXTpm11__ResumeGroup(
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,	///< Request parameter
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ResumeProcess                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ResumeProcess" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ResumeProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,
    // response parameters:
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ResumeProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,
    // response parameters:
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ResumeProcess document
//gsoap MultiXTpm11 service method-encoding:	ResumeProcess literal
//gsoap MultiXTpm11 service method-action:	ResumeProcess http://mitug.co.il/MultiXTpm/ResumeProcess
int __MultiXTpm11__ResumeProcess(
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,	///< Request parameter
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__RestartAll                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__RestartAll" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__RestartAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,
    // response parameters:
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__RestartAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,
    // response parameters:
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	RestartAll document
//gsoap MultiXTpm11 service method-encoding:	RestartAll literal
//gsoap MultiXTpm11 service method-action:	RestartAll http://mitug.co.il/MultiXTpm/RestartAll
int __MultiXTpm11__RestartAll(
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,	///< Request parameter
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__StartAll                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__StartAll" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__StartAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,
    // response parameters:
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__StartAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,
    // response parameters:
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	StartAll document
//gsoap MultiXTpm11 service method-encoding:	StartAll literal
//gsoap MultiXTpm11 service method-action:	StartAll http://mitug.co.il/MultiXTpm/StartAll
int __MultiXTpm11__StartAll(
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,	///< Request parameter
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ShutdownAll                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ShutdownAll" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ShutdownAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,
    // response parameters:
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ShutdownAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,
    // response parameters:
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ShutdownAll document
//gsoap MultiXTpm11 service method-encoding:	ShutdownAll literal
//gsoap MultiXTpm11 service method-action:	ShutdownAll http://mitug.co.il/MultiXTpm/ShutdownAll
int __MultiXTpm11__ShutdownAll(
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,	///< Request parameter
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__SuspendAll                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__SuspendAll" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__SuspendAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,
    // response parameters:
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__SuspendAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,
    // response parameters:
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	SuspendAll document
//gsoap MultiXTpm11 service method-encoding:	SuspendAll literal
//gsoap MultiXTpm11 service method-action:	SuspendAll http://mitug.co.il/MultiXTpm/SuspendAll
int __MultiXTpm11__SuspendAll(
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,	///< Request parameter
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm11__ResumeAll                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm11__ResumeAll" of service binding "MultiXTpmSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm11__ResumeAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,
    // response parameters:
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm11__ResumeAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,
    // response parameters:
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoapProxy.h):
  class MultiXTpmSoap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm11 service method-style:	ResumeAll document
//gsoap MultiXTpm11 service method-encoding:	ResumeAll literal
//gsoap MultiXTpm11 service method-action:	ResumeAll http://mitug.co.il/MultiXTpm/ResumeAll
int __MultiXTpm11__ResumeAll(
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,	///< Request parameter
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * MultiXTpmSoap12                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__GetConfig                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__GetConfig" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/GetConfig"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__GetConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,
    // response parameters:
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__GetConfig(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,
    // response parameters:
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	GetConfig document
//gsoap MultiXTpm12 service method-encoding:	GetConfig literal
//gsoap MultiXTpm12 service method-action:	GetConfig http://mitug.co.il/MultiXTpm/GetConfig
int __MultiXTpm12__GetConfig(
    _MultiXTpm__GetConfig*              MultiXTpm__GetConfig,	///< Request parameter
    _MultiXTpm__GetConfigResponse*      MultiXTpm__GetConfigResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__UpdateConfig                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__UpdateConfig" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/UpdateConfig"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__UpdateConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,
    // response parameters:
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__UpdateConfig(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,
    // response parameters:
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	UpdateConfig document
//gsoap MultiXTpm12 service method-encoding:	UpdateConfig literal
//gsoap MultiXTpm12 service method-action:	UpdateConfig http://mitug.co.il/MultiXTpm/UpdateConfig
int __MultiXTpm12__UpdateConfig(
    _MultiXTpm__UpdateConfig*           MultiXTpm__UpdateConfig,	///< Request parameter
    _MultiXTpm__UpdateConfigResponse*   MultiXTpm__UpdateConfigResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__GetSystemStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__GetSystemStatus" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/GetSystemStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__GetSystemStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,
    // response parameters:
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__GetSystemStatus(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,
    // response parameters:
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	GetSystemStatus document
//gsoap MultiXTpm12 service method-encoding:	GetSystemStatus literal
//gsoap MultiXTpm12 service method-action:	GetSystemStatus http://mitug.co.il/MultiXTpm/GetSystemStatus
int __MultiXTpm12__GetSystemStatus(
    _MultiXTpm__GetSystemStatus*        MultiXTpm__GetSystemStatus,	///< Request parameter
    _MultiXTpm__GetSystemStatusResponse* MultiXTpm__GetSystemStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__RestartProcess                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__RestartProcess" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__RestartProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,
    // response parameters:
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__RestartProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,
    // response parameters:
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	RestartProcess document
//gsoap MultiXTpm12 service method-encoding:	RestartProcess literal
//gsoap MultiXTpm12 service method-action:	RestartProcess http://mitug.co.il/MultiXTpm/RestartProcess
int __MultiXTpm12__RestartProcess(
    _MultiXTpm__RestartProcess*         MultiXTpm__RestartProcess,	///< Request parameter
    _MultiXTpm__RestartProcessResponse* MultiXTpm__RestartProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__RestartGroup                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__RestartGroup" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__RestartGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,
    // response parameters:
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__RestartGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,
    // response parameters:
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	RestartGroup document
//gsoap MultiXTpm12 service method-encoding:	RestartGroup literal
//gsoap MultiXTpm12 service method-action:	RestartGroup http://mitug.co.il/MultiXTpm/RestartGroup
int __MultiXTpm12__RestartGroup(
    _MultiXTpm__RestartGroup*           MultiXTpm__RestartGroup,	///< Request parameter
    _MultiXTpm__RestartGroupResponse*   MultiXTpm__RestartGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__StartProcess                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__StartProcess" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__StartProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,
    // response parameters:
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__StartProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,
    // response parameters:
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	StartProcess document
//gsoap MultiXTpm12 service method-encoding:	StartProcess literal
//gsoap MultiXTpm12 service method-action:	StartProcess http://mitug.co.il/MultiXTpm/StartProcess
int __MultiXTpm12__StartProcess(
    _MultiXTpm__StartProcess*           MultiXTpm__StartProcess,	///< Request parameter
    _MultiXTpm__StartProcessResponse*   MultiXTpm__StartProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__StartGroup                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__StartGroup" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__StartGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,
    // response parameters:
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__StartGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,
    // response parameters:
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	StartGroup document
//gsoap MultiXTpm12 service method-encoding:	StartGroup literal
//gsoap MultiXTpm12 service method-action:	StartGroup http://mitug.co.il/MultiXTpm/StartGroup
int __MultiXTpm12__StartGroup(
    _MultiXTpm__StartGroup*             MultiXTpm__StartGroup,	///< Request parameter
    _MultiXTpm__StartGroupResponse*     MultiXTpm__StartGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ShutdownProcess                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ShutdownProcess" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ShutdownProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,
    // response parameters:
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ShutdownProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,
    // response parameters:
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ShutdownProcess document
//gsoap MultiXTpm12 service method-encoding:	ShutdownProcess literal
//gsoap MultiXTpm12 service method-action:	ShutdownProcess http://mitug.co.il/MultiXTpm/ShutdownProcess
int __MultiXTpm12__ShutdownProcess(
    _MultiXTpm__ShutdownProcess*        MultiXTpm__ShutdownProcess,	///< Request parameter
    _MultiXTpm__ShutdownProcessResponse* MultiXTpm__ShutdownProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ShutdownGroup                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ShutdownGroup" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ShutdownGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,
    // response parameters:
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ShutdownGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,
    // response parameters:
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ShutdownGroup document
//gsoap MultiXTpm12 service method-encoding:	ShutdownGroup literal
//gsoap MultiXTpm12 service method-action:	ShutdownGroup http://mitug.co.il/MultiXTpm/ShutdownGroup
int __MultiXTpm12__ShutdownGroup(
    _MultiXTpm__ShutdownGroup*          MultiXTpm__ShutdownGroup,	///< Request parameter
    _MultiXTpm__ShutdownGroupResponse*  MultiXTpm__ShutdownGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__SuspendGroup                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__SuspendGroup" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__SuspendGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,
    // response parameters:
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__SuspendGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,
    // response parameters:
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	SuspendGroup document
//gsoap MultiXTpm12 service method-encoding:	SuspendGroup literal
//gsoap MultiXTpm12 service method-action:	SuspendGroup http://mitug.co.il/MultiXTpm/SuspendGroup
int __MultiXTpm12__SuspendGroup(
    _MultiXTpm__SuspendGroup*           MultiXTpm__SuspendGroup,	///< Request parameter
    _MultiXTpm__SuspendGroupResponse*   MultiXTpm__SuspendGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__SuspendProcess                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__SuspendProcess" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__SuspendProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,
    // response parameters:
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__SuspendProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,
    // response parameters:
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	SuspendProcess document
//gsoap MultiXTpm12 service method-encoding:	SuspendProcess literal
//gsoap MultiXTpm12 service method-action:	SuspendProcess http://mitug.co.il/MultiXTpm/SuspendProcess
int __MultiXTpm12__SuspendProcess(
    _MultiXTpm__SuspendProcess*         MultiXTpm__SuspendProcess,	///< Request parameter
    _MultiXTpm__SuspendProcessResponse* MultiXTpm__SuspendProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ResumeGroup                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ResumeGroup" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeGroup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ResumeGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,
    // response parameters:
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ResumeGroup(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,
    // response parameters:
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ResumeGroup document
//gsoap MultiXTpm12 service method-encoding:	ResumeGroup literal
//gsoap MultiXTpm12 service method-action:	ResumeGroup http://mitug.co.il/MultiXTpm/ResumeGroup
int __MultiXTpm12__ResumeGroup(
    _MultiXTpm__ResumeGroup*            MultiXTpm__ResumeGroup,	///< Request parameter
    _MultiXTpm__ResumeGroupResponse*    MultiXTpm__ResumeGroupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ResumeProcess                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ResumeProcess" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeProcess"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ResumeProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,
    // response parameters:
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ResumeProcess(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,
    // response parameters:
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ResumeProcess document
//gsoap MultiXTpm12 service method-encoding:	ResumeProcess literal
//gsoap MultiXTpm12 service method-action:	ResumeProcess http://mitug.co.il/MultiXTpm/ResumeProcess
int __MultiXTpm12__ResumeProcess(
    _MultiXTpm__ResumeProcess*          MultiXTpm__ResumeProcess,	///< Request parameter
    _MultiXTpm__ResumeProcessResponse*  MultiXTpm__ResumeProcessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__RestartAll                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__RestartAll" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/RestartAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__RestartAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,
    // response parameters:
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__RestartAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,
    // response parameters:
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	RestartAll document
//gsoap MultiXTpm12 service method-encoding:	RestartAll literal
//gsoap MultiXTpm12 service method-action:	RestartAll http://mitug.co.il/MultiXTpm/RestartAll
int __MultiXTpm12__RestartAll(
    _MultiXTpm__RestartAll*             MultiXTpm__RestartAll,	///< Request parameter
    _MultiXTpm__RestartAllResponse*     MultiXTpm__RestartAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__StartAll                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__StartAll" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/StartAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__StartAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,
    // response parameters:
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__StartAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,
    // response parameters:
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	StartAll document
//gsoap MultiXTpm12 service method-encoding:	StartAll literal
//gsoap MultiXTpm12 service method-action:	StartAll http://mitug.co.il/MultiXTpm/StartAll
int __MultiXTpm12__StartAll(
    _MultiXTpm__StartAll*               MultiXTpm__StartAll,	///< Request parameter
    _MultiXTpm__StartAllResponse*       MultiXTpm__StartAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ShutdownAll                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ShutdownAll" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ShutdownAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ShutdownAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,
    // response parameters:
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ShutdownAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,
    // response parameters:
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ShutdownAll document
//gsoap MultiXTpm12 service method-encoding:	ShutdownAll literal
//gsoap MultiXTpm12 service method-action:	ShutdownAll http://mitug.co.il/MultiXTpm/ShutdownAll
int __MultiXTpm12__ShutdownAll(
    _MultiXTpm__ShutdownAll*            MultiXTpm__ShutdownAll,	///< Request parameter
    _MultiXTpm__ShutdownAllResponse*    MultiXTpm__ShutdownAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__SuspendAll                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__SuspendAll" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/SuspendAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__SuspendAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,
    // response parameters:
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__SuspendAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,
    // response parameters:
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	SuspendAll document
//gsoap MultiXTpm12 service method-encoding:	SuspendAll literal
//gsoap MultiXTpm12 service method-action:	SuspendAll http://mitug.co.il/MultiXTpm/SuspendAll
int __MultiXTpm12__SuspendAll(
    _MultiXTpm__SuspendAll*             MultiXTpm__SuspendAll,	///< Request parameter
    _MultiXTpm__SuspendAllResponse*     MultiXTpm__SuspendAllResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __MultiXTpm12__ResumeAll                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__MultiXTpm12__ResumeAll" of service binding "MultiXTpmSoap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://mitug.co.il/MultiXTpm/ResumeAll"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___MultiXTpm12__ResumeAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,
    // response parameters:
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __MultiXTpm12__ResumeAll(
    struct soap *soap,
    // request parameters:
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,
    // response parameters:
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse
  );
@endcode

C++ proxy class (defined in soapMultiXTpmSoap12Proxy.h):
  class MultiXTpmSoap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap MultiXTpm12 service method-style:	ResumeAll document
//gsoap MultiXTpm12 service method-encoding:	ResumeAll literal
//gsoap MultiXTpm12 service method-action:	ResumeAll http://mitug.co.il/MultiXTpm/ResumeAll
int __MultiXTpm12__ResumeAll(
    _MultiXTpm__ResumeAll*              MultiXTpm__ResumeAll,	///< Request parameter
    _MultiXTpm__ResumeAllResponse*      MultiXTpm__ResumeAllResponse	///< Response parameter
);

/* End of gSoapMultiXTpmwsdl.h */
