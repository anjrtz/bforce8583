//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
// 
#pragma warning disable 1591

namespace MultiXTpmAdmin.MultiXTpm {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MultiXTpmSoap", Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class MultiXTpm : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResumeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResumeProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuspendAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResumeAllOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MultiXTpm() {
            this.Url = global::MultiXTpmAdmin.Properties.Settings.Default.MultiXTpmAdmin_MultiXTpm_MultiXTpm;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConfigCompletedEventHandler GetConfigCompleted;
        
        /// <remarks/>
        public event UpdateConfigCompletedEventHandler UpdateConfigCompleted;
        
        /// <remarks/>
        public event GetSystemStatusCompletedEventHandler GetSystemStatusCompleted;
        
        /// <remarks/>
        public event RestartProcessCompletedEventHandler RestartProcessCompleted;
        
        /// <remarks/>
        public event RestartGroupCompletedEventHandler RestartGroupCompleted;
        
        /// <remarks/>
        public event StartProcessCompletedEventHandler StartProcessCompleted;
        
        /// <remarks/>
        public event StartGroupCompletedEventHandler StartGroupCompleted;
        
        /// <remarks/>
        public event ShutdownProcessCompletedEventHandler ShutdownProcessCompleted;
        
        /// <remarks/>
        public event ShutdownGroupCompletedEventHandler ShutdownGroupCompleted;
        
        /// <remarks/>
        public event SuspendGroupCompletedEventHandler SuspendGroupCompleted;
        
        /// <remarks/>
        public event SuspendProcessCompletedEventHandler SuspendProcessCompleted;
        
        /// <remarks/>
        public event ResumeGroupCompletedEventHandler ResumeGroupCompleted;
        
        /// <remarks/>
        public event ResumeProcessCompletedEventHandler ResumeProcessCompleted;
        
        /// <remarks/>
        public event RestartAllCompletedEventHandler RestartAllCompleted;
        
        /// <remarks/>
        public event StartAllCompletedEventHandler StartAllCompleted;
        
        /// <remarks/>
        public event ShutdownAllCompletedEventHandler ShutdownAllCompleted;
        
        /// <remarks/>
        public event SuspendAllCompletedEventHandler SuspendAllCompleted;
        
        /// <remarks/>
        public event ResumeAllCompletedEventHandler ResumeAllCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/GetConfig", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfigData GetConfig() {
            object[] results = this.Invoke("GetConfig", new object[0]);
            return ((ConfigData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetConfig(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetConfig", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ConfigData EndGetConfig(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConfigData)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigAsync() {
            this.GetConfigAsync(null);
        }
        
        /// <remarks/>
        public void GetConfigAsync(object userState) {
            if ((this.GetConfigOperationCompleted == null)) {
                this.GetConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigOperationCompleted);
            }
            this.InvokeAsync("GetConfig", new object[0], this.GetConfigOperationCompleted, userState);
        }
        
        private void OnGetConfigOperationCompleted(object arg) {
            if ((this.GetConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigCompleted(this, new GetConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/UpdateConfig", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateConfig(ref ConfigData Config, bool SaveToDisk) {
            object[] results = this.Invoke("UpdateConfig", new object[] {
                        Config,
                        SaveToDisk});
            Config = ((ConfigData)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateConfig(ConfigData Config, bool SaveToDisk, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateConfig", new object[] {
                        Config,
                        SaveToDisk}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateConfig(System.IAsyncResult asyncResult, out ConfigData Config) {
            object[] results = this.EndInvoke(asyncResult);
            Config = ((ConfigData)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(ConfigData Config, bool SaveToDisk) {
            this.UpdateConfigAsync(Config, SaveToDisk, null);
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(ConfigData Config, bool SaveToDisk, object userState) {
            if ((this.UpdateConfigOperationCompleted == null)) {
                this.UpdateConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConfigOperationCompleted);
            }
            this.InvokeAsync("UpdateConfig", new object[] {
                        Config,
                        SaveToDisk}, this.UpdateConfigOperationCompleted, userState);
        }
        
        private void OnUpdateConfigOperationCompleted(object arg) {
            if ((this.UpdateConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConfigCompleted(this, new UpdateConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/GetSystemStatus", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemStatus GetSystemStatus(System.DateTime LastConfigTime, out ConfigData Config) {
            object[] results = this.Invoke("GetSystemStatus", new object[] {
                        LastConfigTime});
            Config = ((ConfigData)(results[1]));
            return ((SystemStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemStatus(System.DateTime LastConfigTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemStatus", new object[] {
                        LastConfigTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public SystemStatus EndGetSystemStatus(System.IAsyncResult asyncResult, out ConfigData Config) {
            object[] results = this.EndInvoke(asyncResult);
            Config = ((ConfigData)(results[1]));
            return ((SystemStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemStatusAsync(System.DateTime LastConfigTime) {
            this.GetSystemStatusAsync(LastConfigTime, null);
        }
        
        /// <remarks/>
        public void GetSystemStatusAsync(System.DateTime LastConfigTime, object userState) {
            if ((this.GetSystemStatusOperationCompleted == null)) {
                this.GetSystemStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemStatusOperationCompleted);
            }
            this.InvokeAsync("GetSystemStatus", new object[] {
                        LastConfigTime}, this.GetSystemStatusOperationCompleted, userState);
        }
        
        private void OnGetSystemStatusOperationCompleted(object arg) {
            if ((this.GetSystemStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemStatusCompleted(this, new GetSystemStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/RestartProcess", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RestartProcess(int[] ProcessID, bool bForce) {
            object[] results = this.Invoke("RestartProcess", new object[] {
                        ProcessID,
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestartProcess(int[] ProcessID, bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestartProcess", new object[] {
                        ProcessID,
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRestartProcess(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RestartProcessAsync(int[] ProcessID, bool bForce) {
            this.RestartProcessAsync(ProcessID, bForce, null);
        }
        
        /// <remarks/>
        public void RestartProcessAsync(int[] ProcessID, bool bForce, object userState) {
            if ((this.RestartProcessOperationCompleted == null)) {
                this.RestartProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartProcessOperationCompleted);
            }
            this.InvokeAsync("RestartProcess", new object[] {
                        ProcessID,
                        bForce}, this.RestartProcessOperationCompleted, userState);
        }
        
        private void OnRestartProcessOperationCompleted(object arg) {
            if ((this.RestartProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartProcessCompleted(this, new RestartProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/RestartGroup", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RestartGroup(int[] GroupID, bool bForce) {
            object[] results = this.Invoke("RestartGroup", new object[] {
                        GroupID,
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestartGroup(int[] GroupID, bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestartGroup", new object[] {
                        GroupID,
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRestartGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RestartGroupAsync(int[] GroupID, bool bForce) {
            this.RestartGroupAsync(GroupID, bForce, null);
        }
        
        /// <remarks/>
        public void RestartGroupAsync(int[] GroupID, bool bForce, object userState) {
            if ((this.RestartGroupOperationCompleted == null)) {
                this.RestartGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartGroupOperationCompleted);
            }
            this.InvokeAsync("RestartGroup", new object[] {
                        GroupID,
                        bForce}, this.RestartGroupOperationCompleted, userState);
        }
        
        private void OnRestartGroupOperationCompleted(object arg) {
            if ((this.RestartGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartGroupCompleted(this, new RestartGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/StartProcess", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartProcess(int[] ProcessID) {
            object[] results = this.Invoke("StartProcess", new object[] {
                        ProcessID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartProcess(int[] ProcessID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartProcess", new object[] {
                        ProcessID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStartProcess(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartProcessAsync(int[] ProcessID) {
            this.StartProcessAsync(ProcessID, null);
        }
        
        /// <remarks/>
        public void StartProcessAsync(int[] ProcessID, object userState) {
            if ((this.StartProcessOperationCompleted == null)) {
                this.StartProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartProcessOperationCompleted);
            }
            this.InvokeAsync("StartProcess", new object[] {
                        ProcessID}, this.StartProcessOperationCompleted, userState);
        }
        
        private void OnStartProcessOperationCompleted(object arg) {
            if ((this.StartProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartProcessCompleted(this, new StartProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/StartGroup", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartGroup(int[] GroupID) {
            object[] results = this.Invoke("StartGroup", new object[] {
                        GroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartGroup(int[] GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartGroup", new object[] {
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStartGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartGroupAsync(int[] GroupID) {
            this.StartGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void StartGroupAsync(int[] GroupID, object userState) {
            if ((this.StartGroupOperationCompleted == null)) {
                this.StartGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartGroupOperationCompleted);
            }
            this.InvokeAsync("StartGroup", new object[] {
                        GroupID}, this.StartGroupOperationCompleted, userState);
        }
        
        private void OnStartGroupOperationCompleted(object arg) {
            if ((this.StartGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartGroupCompleted(this, new StartGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ShutdownProcess", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShutdownProcess(int[] ProcessID, bool bForce) {
            object[] results = this.Invoke("ShutdownProcess", new object[] {
                        ProcessID,
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShutdownProcess(int[] ProcessID, bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShutdownProcess", new object[] {
                        ProcessID,
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndShutdownProcess(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShutdownProcessAsync(int[] ProcessID, bool bForce) {
            this.ShutdownProcessAsync(ProcessID, bForce, null);
        }
        
        /// <remarks/>
        public void ShutdownProcessAsync(int[] ProcessID, bool bForce, object userState) {
            if ((this.ShutdownProcessOperationCompleted == null)) {
                this.ShutdownProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownProcessOperationCompleted);
            }
            this.InvokeAsync("ShutdownProcess", new object[] {
                        ProcessID,
                        bForce}, this.ShutdownProcessOperationCompleted, userState);
        }
        
        private void OnShutdownProcessOperationCompleted(object arg) {
            if ((this.ShutdownProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownProcessCompleted(this, new ShutdownProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ShutdownGroup", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShutdownGroup(int[] GroupID, bool bForce) {
            object[] results = this.Invoke("ShutdownGroup", new object[] {
                        GroupID,
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShutdownGroup(int[] GroupID, bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShutdownGroup", new object[] {
                        GroupID,
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndShutdownGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShutdownGroupAsync(int[] GroupID, bool bForce) {
            this.ShutdownGroupAsync(GroupID, bForce, null);
        }
        
        /// <remarks/>
        public void ShutdownGroupAsync(int[] GroupID, bool bForce, object userState) {
            if ((this.ShutdownGroupOperationCompleted == null)) {
                this.ShutdownGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownGroupOperationCompleted);
            }
            this.InvokeAsync("ShutdownGroup", new object[] {
                        GroupID,
                        bForce}, this.ShutdownGroupOperationCompleted, userState);
        }
        
        private void OnShutdownGroupOperationCompleted(object arg) {
            if ((this.ShutdownGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownGroupCompleted(this, new ShutdownGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/SuspendGroup", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendGroup(int[] GroupID) {
            object[] results = this.Invoke("SuspendGroup", new object[] {
                        GroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendGroup(int[] GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendGroup", new object[] {
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendGroupAsync(int[] GroupID) {
            this.SuspendGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void SuspendGroupAsync(int[] GroupID, object userState) {
            if ((this.SuspendGroupOperationCompleted == null)) {
                this.SuspendGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendGroupOperationCompleted);
            }
            this.InvokeAsync("SuspendGroup", new object[] {
                        GroupID}, this.SuspendGroupOperationCompleted, userState);
        }
        
        private void OnSuspendGroupOperationCompleted(object arg) {
            if ((this.SuspendGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendGroupCompleted(this, new SuspendGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/SuspendProcess", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendProcess(int[] ProcessID) {
            object[] results = this.Invoke("SuspendProcess", new object[] {
                        ProcessID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendProcess(int[] ProcessID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendProcess", new object[] {
                        ProcessID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendProcess(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendProcessAsync(int[] ProcessID) {
            this.SuspendProcessAsync(ProcessID, null);
        }
        
        /// <remarks/>
        public void SuspendProcessAsync(int[] ProcessID, object userState) {
            if ((this.SuspendProcessOperationCompleted == null)) {
                this.SuspendProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendProcessOperationCompleted);
            }
            this.InvokeAsync("SuspendProcess", new object[] {
                        ProcessID}, this.SuspendProcessOperationCompleted, userState);
        }
        
        private void OnSuspendProcessOperationCompleted(object arg) {
            if ((this.SuspendProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendProcessCompleted(this, new SuspendProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ResumeGroup", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResumeGroup(int[] GroupID) {
            object[] results = this.Invoke("ResumeGroup", new object[] {
                        GroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResumeGroup(int[] GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResumeGroup", new object[] {
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndResumeGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResumeGroupAsync(int[] GroupID) {
            this.ResumeGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void ResumeGroupAsync(int[] GroupID, object userState) {
            if ((this.ResumeGroupOperationCompleted == null)) {
                this.ResumeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResumeGroupOperationCompleted);
            }
            this.InvokeAsync("ResumeGroup", new object[] {
                        GroupID}, this.ResumeGroupOperationCompleted, userState);
        }
        
        private void OnResumeGroupOperationCompleted(object arg) {
            if ((this.ResumeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResumeGroupCompleted(this, new ResumeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ResumeProcess", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResumeProcess(int[] ProcessID) {
            object[] results = this.Invoke("ResumeProcess", new object[] {
                        ProcessID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResumeProcess(int[] ProcessID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResumeProcess", new object[] {
                        ProcessID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndResumeProcess(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResumeProcessAsync(int[] ProcessID) {
            this.ResumeProcessAsync(ProcessID, null);
        }
        
        /// <remarks/>
        public void ResumeProcessAsync(int[] ProcessID, object userState) {
            if ((this.ResumeProcessOperationCompleted == null)) {
                this.ResumeProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResumeProcessOperationCompleted);
            }
            this.InvokeAsync("ResumeProcess", new object[] {
                        ProcessID}, this.ResumeProcessOperationCompleted, userState);
        }
        
        private void OnResumeProcessOperationCompleted(object arg) {
            if ((this.ResumeProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResumeProcessCompleted(this, new ResumeProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/RestartAll", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RestartAll(bool bForce) {
            object[] results = this.Invoke("RestartAll", new object[] {
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestartAll(bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestartAll", new object[] {
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRestartAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RestartAllAsync(bool bForce) {
            this.RestartAllAsync(bForce, null);
        }
        
        /// <remarks/>
        public void RestartAllAsync(bool bForce, object userState) {
            if ((this.RestartAllOperationCompleted == null)) {
                this.RestartAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartAllOperationCompleted);
            }
            this.InvokeAsync("RestartAll", new object[] {
                        bForce}, this.RestartAllOperationCompleted, userState);
        }
        
        private void OnRestartAllOperationCompleted(object arg) {
            if ((this.RestartAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartAllCompleted(this, new RestartAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/StartAll", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartAll() {
            object[] results = this.Invoke("StartAll", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartAll(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartAll", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStartAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartAllAsync() {
            this.StartAllAsync(null);
        }
        
        /// <remarks/>
        public void StartAllAsync(object userState) {
            if ((this.StartAllOperationCompleted == null)) {
                this.StartAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartAllOperationCompleted);
            }
            this.InvokeAsync("StartAll", new object[0], this.StartAllOperationCompleted, userState);
        }
        
        private void OnStartAllOperationCompleted(object arg) {
            if ((this.StartAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartAllCompleted(this, new StartAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ShutdownAll", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShutdownAll(bool bForce) {
            object[] results = this.Invoke("ShutdownAll", new object[] {
                        bForce});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShutdownAll(bool bForce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShutdownAll", new object[] {
                        bForce}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndShutdownAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShutdownAllAsync(bool bForce) {
            this.ShutdownAllAsync(bForce, null);
        }
        
        /// <remarks/>
        public void ShutdownAllAsync(bool bForce, object userState) {
            if ((this.ShutdownAllOperationCompleted == null)) {
                this.ShutdownAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownAllOperationCompleted);
            }
            this.InvokeAsync("ShutdownAll", new object[] {
                        bForce}, this.ShutdownAllOperationCompleted, userState);
        }
        
        private void OnShutdownAllOperationCompleted(object arg) {
            if ((this.ShutdownAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownAllCompleted(this, new ShutdownAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/SuspendAll", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuspendAll() {
            object[] results = this.Invoke("SuspendAll", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSuspendAll(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SuspendAll", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSuspendAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuspendAllAsync() {
            this.SuspendAllAsync(null);
        }
        
        /// <remarks/>
        public void SuspendAllAsync(object userState) {
            if ((this.SuspendAllOperationCompleted == null)) {
                this.SuspendAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuspendAllOperationCompleted);
            }
            this.InvokeAsync("SuspendAll", new object[0], this.SuspendAllOperationCompleted, userState);
        }
        
        private void OnSuspendAllOperationCompleted(object arg) {
            if ((this.SuspendAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuspendAllCompleted(this, new SuspendAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mitug.co.il/MultiXTpm/ResumeAll", RequestNamespace="http://mitug.co.il/MultiXTpm", ResponseNamespace="http://mitug.co.il/MultiXTpm", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResumeAll() {
            object[] results = this.Invoke("ResumeAll", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResumeAll(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResumeAll", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndResumeAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResumeAllAsync() {
            this.ResumeAllAsync(null);
        }
        
        /// <remarks/>
        public void ResumeAllAsync(object userState) {
            if ((this.ResumeAllOperationCompleted == null)) {
                this.ResumeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResumeAllOperationCompleted);
            }
            this.InvokeAsync("ResumeAll", new object[0], this.ResumeAllOperationCompleted, userState);
        }
        
        private void OnResumeAllOperationCompleted(object arg) {
            if ((this.ResumeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResumeAllCompleted(this, new ResumeAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class ConfigData {
        
        private System.DateTime lastUpdateField;
        
        private string usersPermissionsFileField;
        
        private ProcessClass[] processClassesField;
        
        private Link[] linksField;
        
        private Group[] groupsField;
        
        private Message[] messagesField;
        
        private UserPermission[] usersPermissionsField;
        
        /// <remarks/>
        public System.DateTime LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
        
        /// <remarks/>
        public string UsersPermissionsFile {
            get {
                return this.usersPermissionsFileField;
            }
            set {
                this.usersPermissionsFileField = value;
            }
        }
        
        /// <remarks/>
        public ProcessClass[] ProcessClasses {
            get {
                return this.processClassesField;
            }
            set {
                this.processClassesField = value;
            }
        }
        
        /// <remarks/>
        public Link[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        public Group[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        public UserPermission[] UsersPermissions {
            get {
                return this.usersPermissionsField;
            }
            set {
                this.usersPermissionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class ProcessClass {
        
        private int idField;
        
        private string descriptionField;
        
        private string passwordToSendField;
        
        private string expectedPasswordField;
        
        private string execCmdField;
        
        private string classNameField;
        
        private string additionalConfigTextFileField;
        
        private int debugLevelField;
        
        private int defaultSendTimeoutField;
        
        private string execParamsField;
        
        private int maxQueueSizeField;
        
        private int maxSessionsField;
        
        private int maxRecoveryQueueSizeField;
        
        private bool autoStartField;
        
        private int minInstancesField;
        
        private int maxInstancesField;
        
        private int startProcessDelayField;
        
        private int inactivityTimerField;
        
        private Param[] paramsField;
        
        private int[] linkIDsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordToSend {
            get {
                return this.passwordToSendField;
            }
            set {
                this.passwordToSendField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedPassword {
            get {
                return this.expectedPasswordField;
            }
            set {
                this.expectedPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string ExecCmd {
            get {
                return this.execCmdField;
            }
            set {
                this.execCmdField = value;
            }
        }
        
        /// <remarks/>
        public string ClassName {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalConfigTextFile {
            get {
                return this.additionalConfigTextFileField;
            }
            set {
                this.additionalConfigTextFileField = value;
            }
        }
        
        /// <remarks/>
        public int DebugLevel {
            get {
                return this.debugLevelField;
            }
            set {
                this.debugLevelField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultSendTimeout {
            get {
                return this.defaultSendTimeoutField;
            }
            set {
                this.defaultSendTimeoutField = value;
            }
        }
        
        /// <remarks/>
        public string ExecParams {
            get {
                return this.execParamsField;
            }
            set {
                this.execParamsField = value;
            }
        }
        
        /// <remarks/>
        public int MaxQueueSize {
            get {
                return this.maxQueueSizeField;
            }
            set {
                this.maxQueueSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSessions {
            get {
                return this.maxSessionsField;
            }
            set {
                this.maxSessionsField = value;
            }
        }
        
        /// <remarks/>
        public int MaxRecoveryQueueSize {
            get {
                return this.maxRecoveryQueueSizeField;
            }
            set {
                this.maxRecoveryQueueSizeField = value;
            }
        }
        
        /// <remarks/>
        public bool AutoStart {
            get {
                return this.autoStartField;
            }
            set {
                this.autoStartField = value;
            }
        }
        
        /// <remarks/>
        public int MinInstances {
            get {
                return this.minInstancesField;
            }
            set {
                this.minInstancesField = value;
            }
        }
        
        /// <remarks/>
        public int MaxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        public int StartProcessDelay {
            get {
                return this.startProcessDelayField;
            }
            set {
                this.startProcessDelayField = value;
            }
        }
        
        /// <remarks/>
        public int InactivityTimer {
            get {
                return this.inactivityTimerField;
            }
            set {
                this.inactivityTimerField = value;
            }
        }
        
        /// <remarks/>
        public Param[] Params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)]
        public int[] LinkIDs {
            get {
                return this.linkIDsField;
            }
            set {
                this.linkIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class Param {
        
        private string paramNameField;
        
        private string paramValueField;
        
        private System.Xml.XmlElement xmlParamValueField;
        
        /// <remarks/>
        public string ParamName {
            get {
                return this.paramNameField;
            }
            set {
                this.paramNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParamValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Name="XmlParamValue", Namespace="http://mitug.co.il/MultiXTpm")]
        public System.Xml.XmlElement XmlParamValue {
            get {
                return this.xmlParamValueField;
            }
            set {
                this.xmlParamValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class ProcessStatus {
        
        private int idField;
        
        private string multiXVersionField;
        
        private string appVersionField;
        
        private int processClassIDField;
        
        private bool isReadyField;
        
        private ProcessControlStatus controlStatusField;
        
        private int sessionsCountField;
        
        private int outQueueSizeField;
        
        private System.DateTime lastMsgTimeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string MultiXVersion {
            get {
                return this.multiXVersionField;
            }
            set {
                this.multiXVersionField = value;
            }
        }
        
        /// <remarks/>
        public string AppVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessClassID {
            get {
                return this.processClassIDField;
            }
            set {
                this.processClassIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReady {
            get {
                return this.isReadyField;
            }
            set {
                this.isReadyField = value;
            }
        }
        
        /// <remarks/>
        public ProcessControlStatus ControlStatus {
            get {
                return this.controlStatusField;
            }
            set {
                this.controlStatusField = value;
            }
        }
        
        /// <remarks/>
        public int SessionsCount {
            get {
                return this.sessionsCountField;
            }
            set {
                this.sessionsCountField = value;
            }
        }
        
        /// <remarks/>
        public int OutQueueSize {
            get {
                return this.outQueueSizeField;
            }
            set {
                this.outQueueSizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastMsgTime {
            get {
                return this.lastMsgTimeField;
            }
            set {
                this.lastMsgTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public enum ProcessControlStatus {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Shutdown,
        
        /// <remarks/>
        Suspend,
        
        /// <remarks/>
        Restart,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class GroupStatus {
        
        private int idField;
        
        private int sessionsCountField;
        
        private int outQueueSizeField;
        
        private int queuedItemsSizeField;
        
        private int maxProcessQueueEntriesField;
        
        private int[] processIDsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SessionsCount {
            get {
                return this.sessionsCountField;
            }
            set {
                this.sessionsCountField = value;
            }
        }
        
        /// <remarks/>
        public int OutQueueSize {
            get {
                return this.outQueueSizeField;
            }
            set {
                this.outQueueSizeField = value;
            }
        }
        
        /// <remarks/>
        public int QueuedItemsSize {
            get {
                return this.queuedItemsSizeField;
            }
            set {
                this.queuedItemsSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxProcessQueueEntries {
            get {
                return this.maxProcessQueueEntriesField;
            }
            set {
                this.maxProcessQueueEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)]
        public int[] ProcessIDs {
            get {
                return this.processIDsField;
            }
            set {
                this.processIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class SystemStatus {
        
        private string tpmMultiXVersionField;
        
        private string tpmVersionField;
        
        private string tpmHostNameField;
        
        private string tpmHostIPField;
        
        private int sessionsCountField;
        
        private GroupStatus[] groupsStatusField;
        
        private ProcessStatus[] processesStatusField;
        
        /// <remarks/>
        public string TpmMultiXVersion {
            get {
                return this.tpmMultiXVersionField;
            }
            set {
                this.tpmMultiXVersionField = value;
            }
        }
        
        /// <remarks/>
        public string TpmVersion {
            get {
                return this.tpmVersionField;
            }
            set {
                this.tpmVersionField = value;
            }
        }
        
        /// <remarks/>
        public string TpmHostName {
            get {
                return this.tpmHostNameField;
            }
            set {
                this.tpmHostNameField = value;
            }
        }
        
        /// <remarks/>
        public string TpmHostIP {
            get {
                return this.tpmHostIPField;
            }
            set {
                this.tpmHostIPField = value;
            }
        }
        
        /// <remarks/>
        public int SessionsCount {
            get {
                return this.sessionsCountField;
            }
            set {
                this.sessionsCountField = value;
            }
        }
        
        /// <remarks/>
        public GroupStatus[] GroupsStatus {
            get {
                return this.groupsStatusField;
            }
            set {
                this.groupsStatusField = value;
            }
        }
        
        /// <remarks/>
        public ProcessStatus[] ProcessesStatus {
            get {
                return this.processesStatusField;
            }
            set {
                this.processesStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class UserPermission {
        
        private string userNameField;
        
        private bool isGroupField;
        
        private bool getWSDLField;
        
        private bool getConfigField;
        
        private bool updateConfigField;
        
        private bool getSystemStatusField;
        
        private bool restartProcessField;
        
        private bool restartGroupField;
        
        private bool startProcessField;
        
        private bool startGroupField;
        
        private bool shutdownProcessField;
        
        private bool shutdownGroupField;
        
        private bool suspendGroupField;
        
        private bool suspendProcessField;
        
        private bool resumeGroupField;
        
        private bool resumeProcessField;
        
        private bool restartAllField;
        
        private bool startAllField;
        
        private bool shutdownAllField;
        
        private bool suspendAllField;
        
        private bool resumeAllField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsGroup {
            get {
                return this.isGroupField;
            }
            set {
                this.isGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool GetWSDL {
            get {
                return this.getWSDLField;
            }
            set {
                this.getWSDLField = value;
            }
        }
        
        /// <remarks/>
        public bool GetConfig {
            get {
                return this.getConfigField;
            }
            set {
                this.getConfigField = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateConfig {
            get {
                return this.updateConfigField;
            }
            set {
                this.updateConfigField = value;
            }
        }
        
        /// <remarks/>
        public bool GetSystemStatus {
            get {
                return this.getSystemStatusField;
            }
            set {
                this.getSystemStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool RestartProcess {
            get {
                return this.restartProcessField;
            }
            set {
                this.restartProcessField = value;
            }
        }
        
        /// <remarks/>
        public bool RestartGroup {
            get {
                return this.restartGroupField;
            }
            set {
                this.restartGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool StartProcess {
            get {
                return this.startProcessField;
            }
            set {
                this.startProcessField = value;
            }
        }
        
        /// <remarks/>
        public bool StartGroup {
            get {
                return this.startGroupField;
            }
            set {
                this.startGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool ShutdownProcess {
            get {
                return this.shutdownProcessField;
            }
            set {
                this.shutdownProcessField = value;
            }
        }
        
        /// <remarks/>
        public bool ShutdownGroup {
            get {
                return this.shutdownGroupField;
            }
            set {
                this.shutdownGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool SuspendGroup {
            get {
                return this.suspendGroupField;
            }
            set {
                this.suspendGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool SuspendProcess {
            get {
                return this.suspendProcessField;
            }
            set {
                this.suspendProcessField = value;
            }
        }
        
        /// <remarks/>
        public bool ResumeGroup {
            get {
                return this.resumeGroupField;
            }
            set {
                this.resumeGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool ResumeProcess {
            get {
                return this.resumeProcessField;
            }
            set {
                this.resumeProcessField = value;
            }
        }
        
        /// <remarks/>
        public bool RestartAll {
            get {
                return this.restartAllField;
            }
            set {
                this.restartAllField = value;
            }
        }
        
        /// <remarks/>
        public bool StartAll {
            get {
                return this.startAllField;
            }
            set {
                this.startAllField = value;
            }
        }
        
        /// <remarks/>
        public bool ShutdownAll {
            get {
                return this.shutdownAllField;
            }
            set {
                this.shutdownAllField = value;
            }
        }
        
        /// <remarks/>
        public bool SuspendAll {
            get {
                return this.suspendAllField;
            }
            set {
                this.suspendAllField = value;
            }
        }
        
        /// <remarks/>
        public bool ResumeAll {
            get {
                return this.resumeAllField;
            }
            set {
                this.resumeAllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class GroupForwardFlags {
        
        private int groupIDField;
        
        private bool responseRequiredField;
        
        private bool ignoreResponseField;
        
        private bool forwardToAllField;
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ResponseRequired {
            get {
                return this.responseRequiredField;
            }
            set {
                this.responseRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreResponse {
            get {
                return this.ignoreResponseField;
            }
            set {
                this.ignoreResponseField = value;
            }
        }
        
        /// <remarks/>
        public bool ForwardToAll {
            get {
                return this.forwardToAllField;
            }
            set {
                this.forwardToAllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class Message {
        
        private int idField;
        
        private string descriptionField;
        
        private bool statefulField;
        
        private bool dbProtectedField;
        
        private int timeoutField;
        
        private int priorityField;
        
        private string wSURLField;
        
        private string wSSoapActionField;
        
        private string wSDllFileField;
        
        private string wSDllFunctionField;
        
        private GroupForwardFlags[] forwardFlagsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Stateful {
            get {
                return this.statefulField;
            }
            set {
                this.statefulField = value;
            }
        }
        
        /// <remarks/>
        public bool DbProtected {
            get {
                return this.dbProtectedField;
            }
            set {
                this.dbProtectedField = value;
            }
        }
        
        /// <remarks/>
        public int Timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string WSURL {
            get {
                return this.wSURLField;
            }
            set {
                this.wSURLField = value;
            }
        }
        
        /// <remarks/>
        public string WSSoapAction {
            get {
                return this.wSSoapActionField;
            }
            set {
                this.wSSoapActionField = value;
            }
        }
        
        /// <remarks/>
        public string WSDllFile {
            get {
                return this.wSDllFileField;
            }
            set {
                this.wSDllFileField = value;
            }
        }
        
        /// <remarks/>
        public string WSDllFunction {
            get {
                return this.wSDllFunctionField;
            }
            set {
                this.wSDllFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Flags")]
        public GroupForwardFlags[] ForwardFlags {
            get {
                return this.forwardFlagsField;
            }
            set {
                this.forwardFlagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class Group {
        
        private int idField;
        
        private string descriptionField;
        
        private int[] processClassIDsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ID", IsNullable=false)]
        public int[] ProcessClassIDs {
            get {
                return this.processClassIDsField;
            }
            set {
                this.processClassIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class SSLParams {
        
        private SSL_API aPIField;
        
        private bool clientAuthenticationRequiredField;
        
        private bool serverAuthenticationRequiredField;
        
        private bool serverNameVerificationRequiredField;
        
        private string trustStoreFileField;
        
        private string trustStoreDirectoryField;
        
        private string certificateFileField;
        
        private string privateKeyFileField;
        
        private string privateKeyPasswordField;
        
        private string privateKeyPasswordFileField;
        
        private string rSAPrivateKeyFileField;
        
        private string dHFileField;
        
        /// <remarks/>
        public SSL_API API {
            get {
                return this.aPIField;
            }
            set {
                this.aPIField = value;
            }
        }
        
        /// <remarks/>
        public bool ClientAuthenticationRequired {
            get {
                return this.clientAuthenticationRequiredField;
            }
            set {
                this.clientAuthenticationRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool ServerAuthenticationRequired {
            get {
                return this.serverAuthenticationRequiredField;
            }
            set {
                this.serverAuthenticationRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool ServerNameVerificationRequired {
            get {
                return this.serverNameVerificationRequiredField;
            }
            set {
                this.serverNameVerificationRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string TrustStoreFile {
            get {
                return this.trustStoreFileField;
            }
            set {
                this.trustStoreFileField = value;
            }
        }
        
        /// <remarks/>
        public string TrustStoreDirectory {
            get {
                return this.trustStoreDirectoryField;
            }
            set {
                this.trustStoreDirectoryField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateFile {
            get {
                return this.certificateFileField;
            }
            set {
                this.certificateFileField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateKeyFile {
            get {
                return this.privateKeyFileField;
            }
            set {
                this.privateKeyFileField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateKeyPassword {
            get {
                return this.privateKeyPasswordField;
            }
            set {
                this.privateKeyPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateKeyPasswordFile {
            get {
                return this.privateKeyPasswordFileField;
            }
            set {
                this.privateKeyPasswordFileField = value;
            }
        }
        
        /// <remarks/>
        public string RSAPrivateKeyFile {
            get {
                return this.rSAPrivateKeyFileField;
            }
            set {
                this.rSAPrivateKeyFileField = value;
            }
        }
        
        /// <remarks/>
        public string DHFile {
            get {
                return this.dHFileField;
            }
            set {
                this.dHFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public enum SSL_API {
        
        /// <remarks/>
        NoSSLAPI,
        
        /// <remarks/>
        OpenSSL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public partial class Link {
        
        private int idField;
        
        private string descriptionField;
        
        private MultiXLinkType linkTypeField;
        
        private MultiXOpenMode openModeField;
        
        private bool rawField;
        
        private string localAddressField;
        
        private string localPortField;
        
        private string remoteAddressField;
        
        private string remotePortField;
        
        private SSLParams sSLParamsField;
        
        private Param[] paramsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public MultiXLinkType LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        public MultiXOpenMode OpenMode {
            get {
                return this.openModeField;
            }
            set {
                this.openModeField = value;
            }
        }
        
        /// <remarks/>
        public bool Raw {
            get {
                return this.rawField;
            }
            set {
                this.rawField = value;
            }
        }
        
        /// <remarks/>
        public string LocalAddress {
            get {
                return this.localAddressField;
            }
            set {
                this.localAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LocalPort {
            get {
                return this.localPortField;
            }
            set {
                this.localPortField = value;
            }
        }
        
        /// <remarks/>
        public string RemoteAddress {
            get {
                return this.remoteAddressField;
            }
            set {
                this.remoteAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RemotePort {
            get {
                return this.remotePortField;
            }
            set {
                this.remotePortField = value;
            }
        }
        
        /// <remarks/>
        public SSLParams SSLParams {
            get {
                return this.sSLParamsField;
            }
            set {
                this.sSLParamsField = value;
            }
        }
        
        /// <remarks/>
        public Param[] Params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public enum MultiXLinkType {
        
        /// <remarks/>
        MultiXLinkTypeFirst,
        
        /// <remarks/>
        MultiXLinkTypeTcp,
        
        /// <remarks/>
        MultiXLinkTypeLast,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mitug.co.il/MultiXTpm")]
    public enum MultiXOpenMode {
        
        /// <remarks/>
        MultiXOpenModeFirst,
        
        /// <remarks/>
        MultiXOpenModeServer,
        
        /// <remarks/>
        MultiXOpenModeClient,
        
        /// <remarks/>
        MultiXOpenModeAccept,
        
        /// <remarks/>
        MultiXOpenModeLast,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetConfigCompletedEventHandler(object sender, GetConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfigData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateConfigCompletedEventHandler(object sender, UpdateConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ConfigData Config {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSystemStatusCompletedEventHandler(object sender, GetSystemStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemStatus)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ConfigData Config {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RestartProcessCompletedEventHandler(object sender, RestartProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestartProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestartProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RestartGroupCompletedEventHandler(object sender, RestartGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestartGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestartGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void StartProcessCompletedEventHandler(object sender, StartProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void StartGroupCompletedEventHandler(object sender, StartGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ShutdownProcessCompletedEventHandler(object sender, ShutdownProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShutdownProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShutdownProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ShutdownGroupCompletedEventHandler(object sender, ShutdownGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShutdownGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShutdownGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SuspendGroupCompletedEventHandler(object sender, SuspendGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SuspendProcessCompletedEventHandler(object sender, SuspendProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ResumeGroupCompletedEventHandler(object sender, ResumeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResumeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResumeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ResumeProcessCompletedEventHandler(object sender, ResumeProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResumeProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResumeProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RestartAllCompletedEventHandler(object sender, RestartAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestartAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestartAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void StartAllCompletedEventHandler(object sender, StartAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ShutdownAllCompletedEventHandler(object sender, ShutdownAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShutdownAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShutdownAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SuspendAllCompletedEventHandler(object sender, SuspendAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuspendAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuspendAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ResumeAllCompletedEventHandler(object sender, ResumeAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResumeAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResumeAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591