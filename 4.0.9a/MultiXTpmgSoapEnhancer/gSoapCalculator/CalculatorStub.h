/* CalculatorStub.h
   Generated by gSOAP 2.7.10 from Calculator.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef CalculatorStub_H
#define CalculatorStub_H
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_Calculator__AddResponse
#define SOAP_TYPE_Calculator__AddResponse (11)
/* Calculator:AddResponse */
struct Calculator__AddResponse
{
public:
	double Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__Add
#define SOAP_TYPE_Calculator__Add (12)
/* Calculator:Add */
struct Calculator__Add
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__SubResponse
#define SOAP_TYPE_Calculator__SubResponse (14)
/* Calculator:SubResponse */
struct Calculator__SubResponse
{
public:
	double Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__Sub
#define SOAP_TYPE_Calculator__Sub (15)
/* Calculator:Sub */
struct Calculator__Sub
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__MulResponse
#define SOAP_TYPE_Calculator__MulResponse (17)
/* Calculator:MulResponse */
struct Calculator__MulResponse
{
public:
	double Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__Mul
#define SOAP_TYPE_Calculator__Mul (18)
/* Calculator:Mul */
struct Calculator__Mul
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__DivResponse
#define SOAP_TYPE_Calculator__DivResponse (20)
/* Calculator:DivResponse */
struct Calculator__DivResponse
{
public:
	double Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_Calculator__Div
#define SOAP_TYPE_Calculator__Div (21)
/* Calculator:Div */
struct Calculator__Div
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (22)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (23)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (25)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (28)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (29)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (8)
typedef double xsd__double;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 Calculator__Add(struct soap*, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 Calculator__Sub(struct soap*, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 Calculator__Mul(struct soap*, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 Calculator__Div(struct soap*, double a, double b, double &Result);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_Calculator__Add(struct soap *soap, const char *soap_endpoint, const char *soap_action, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_Calculator__Sub(struct soap *soap, const char *soap_endpoint, const char *soap_action, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_Calculator__Mul(struct soap *soap, const char *soap_endpoint, const char *soap_action, double a, double b, double &Result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_Calculator__Div(struct soap *soap, const char *soap_endpoint, const char *soap_action, double a, double b, double &Result);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 Calculator_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 Calculator_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_Calculator__Add(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_Calculator__Sub(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_Calculator__Mul(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_Calculator__Div(struct soap*);

#endif

/* End of CalculatorStub.h */
