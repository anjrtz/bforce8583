/* gSoapISO8583WSClient.cpp
   Generated by gSOAP 2.7.10 from gSoapISO8583WSwsdl.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "gSoapISO8583WSH.h"

SOAP_SOURCE_STAMP("@(#) gSoapISO8583WSClient.cpp ver 2.7.10 2008-06-25 16:15:54 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ISO8583WS11__ISO8583Request(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ISO8583WS__ISO8583Request *ISO8583WS__ISO8583Request, _ISO8583WS__ISO8583RequestResponse *ISO8583WS__ISO8583RequestResponse)
{	struct __ISO8583WS11__ISO8583Request soap_tmp___ISO8583WS11__ISO8583Request;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:1651/ISO8583WS.asmx";
	if (!soap_action)
		soap_action = "http://mitug.co.il/MultiXTpm/ISO8583WS/ISO8583Request";
	soap->encodingStyle = NULL;
	soap_tmp___ISO8583WS11__ISO8583Request.ISO8583WS__ISO8583Request = ISO8583WS__ISO8583Request;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ISO8583WS11__ISO8583Request(soap, &soap_tmp___ISO8583WS11__ISO8583Request);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ISO8583WS11__ISO8583Request(soap, &soap_tmp___ISO8583WS11__ISO8583Request, "-ISO8583WS11:ISO8583Request", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ISO8583WS11__ISO8583Request(soap, &soap_tmp___ISO8583WS11__ISO8583Request, "-ISO8583WS11:ISO8583Request", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ISO8583WS__ISO8583RequestResponse)
		return soap_closesock(soap);
	ISO8583WS__ISO8583RequestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ISO8583WS__ISO8583RequestResponse->soap_get(soap, "ISO8583WS:ISO8583RequestResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ISO8583WS12__ISO8583Request(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ISO8583WS__ISO8583Request *ISO8583WS__ISO8583Request, _ISO8583WS__ISO8583RequestResponse *ISO8583WS__ISO8583RequestResponse)
{	struct __ISO8583WS12__ISO8583Request soap_tmp___ISO8583WS12__ISO8583Request;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:1651/ISO8583WS.asmx";
	if (!soap_action)
		soap_action = "http://mitug.co.il/MultiXTpm/ISO8583WS/ISO8583Request";
	soap->encodingStyle = NULL;
	soap_tmp___ISO8583WS12__ISO8583Request.ISO8583WS__ISO8583Request = ISO8583WS__ISO8583Request;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ISO8583WS12__ISO8583Request(soap, &soap_tmp___ISO8583WS12__ISO8583Request);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ISO8583WS12__ISO8583Request(soap, &soap_tmp___ISO8583WS12__ISO8583Request, "-ISO8583WS12:ISO8583Request", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ISO8583WS12__ISO8583Request(soap, &soap_tmp___ISO8583WS12__ISO8583Request, "-ISO8583WS12:ISO8583Request", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ISO8583WS__ISO8583RequestResponse)
		return soap_closesock(soap);
	ISO8583WS__ISO8583RequestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ISO8583WS__ISO8583RequestResponse->soap_get(soap, "ISO8583WS:ISO8583RequestResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of gSoapISO8583WSClient.cpp */
